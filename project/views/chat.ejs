<!doctype html>
<html>
    <head>
        <title>Library</title>
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.2/css/bootstrap.min.css"> <!-- load bootstrap css -->
        <link rel="stylesheet" href="//netdna.bootstrapcdn.com/font-awesome/4.0.3/css/font-awesome.min.css"> <!-- load fontawesome -->
        <script
            src="https://code.jquery.com/jquery-3.6.3.js"
            integrity="sha256-nQLuAZGRRcILA+6dMBOvcRh5Pe310sBpanc6+QBmyVM="
            crossorigin="anonymous">
        </script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/mqtt/4.0.1/mqtt.min.js" type="text/javascript"></script>
        <style>
            body{
                padding-top:80px; 
            }
            .popup {
                position: relative;
                display: inline-block;
                cursor: pointer;
                -webkit-user-select: none;
                -moz-user-select: none;
                -ms-user-select: none;
                user-select: none;
            }
              
              /* The actual popup */
            .popup .popuptext {
                visibility: hidden;
                width: 160px;
                background-color: #555;
                color: #fff;
                text-align: center;
                border-radius: 6px;
                padding: 8px 0;
                position: absolute;
                z-index: 1;
                bottom: 125%;
                left: 50%;
                margin-left: -80px;
            }
              
              /* Popup arrow */
            .popup .popuptext::after {
                content: "";
                position: absolute;
                top: 100%;
                left: 50%;
                margin-left: -5px;
                border-width: 5px;
                border-style: solid;
                border-color: #555 transparent transparent transparent;
            }
              
              /* Toggle this class - hide and show the popup */
            .popup .show {
                visibility: visible;
                -webkit-animation: fadeIn 1s;
                animation: fadeIn 1s;
            }
            @-webkit-keyframes fadeIn {
                from {opacity: 0;} 
                to {opacity: 1;}
            }
              
            @keyframes fadeIn {
                from {opacity: 0;}
                to {opacity:1 ;}
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div class="col-sm-6 col-sm-offset-3 ">
                <h1 id="title"><span class="fa"></span>Chat - <%= chat%></h1>
                <div id="chat" class="fa fa-area-chart chat">
                </div>
                <div>
                    <input class="fa-line-chart " id="twit">
                    <button type="submit" class="btn btn-warning btn-lg" id="sendButton" onclick="sendTwit(
                        document.getElementById('twit').value
                    )">Send</button>
                </div>
            </div>
        </div>
    </body>
    <script>
        const clientId = '<%= user._id%>'
        const email = '<%= user.email%>'
        const permissions = '<%= user.role%>' //do i have access to this varialle from browser terminal?? i think no
        const chatId = '<%= chat%>'

        const sessionId = 'chat' + chatId + Math.random().toString(16).substr(2, 8)
        const host = 'ws://broker.emqx.io:8083/mqtt'
        const options = {
        keepalive: 60,
        clientId: sessionId,

        protocolId: 'MQTT',
        protocolVersion: 4,
        clean: true,
        reconnectPeriod: 1000,
        connectTimeout: 30 * 1000,
        will: {
            topic: 'WillMsg',
            payload: 'Connection Closed abnormally..!',
            qos: 0,
            retain: false
        },
        }
        console.log('Connecting mqtt client')
        const client = mqtt.connect(host, options)

        /*beforeUnloadListener = (event) => {
            client.unsubscribe(chatId)
            client.unsubscribe('sendChats')
            client.publish('leaveChat', `${chatId}|${clientId}|${email}|${permissions}`)
        };
        addEventListener("beforeunload", beforeUnloadListener, {capture: true});*/
        //works very bad((((((((
        window.addEventListener("load", function (event) {
            client.on("connect", function(){
                console.log('connect')
                client.subscribe('sendChats')
                client.publish("getChats", ``)
                client.subscribe('you_are_in_chat')
            })
        

            client.on('message', (topic, string) => {
                if(topic.toString()==='sendChats'){
                    client.unsubscribe('sendChats')
                    const chats=string.toString().split('|')
                    client.publish("roomManage", chatId);
                    client.publish('am_i_in_chat', `${chatId}|${clientId}|${email}|${permissions}`)
                }if(topic.toString()==='you_are_in_chat'){
                    client.unsubscribe('you_are_in_chat')
                    const result_id = string.toString().split('|')
                    console.log(result_id)
                    if(result_id[1]==clientId){
                        console.log(result_id[1])
                        client.subscribe(chatId)//multiwindow
                        if(result_id[0] === 'true'){
                            
                        }else{
                            //client.subscribe(chatId)//onewindow
                            client.publish("joinChat", `${chatId}|${clientId}|${email}|${permissions}`);
                        }
                    }
                }
                if(topic.toString()===chatId){
                    if(string.toString().split('|')[1]=='BANNED' && string.toString().split('|')[0]==clientId){
                        client.publish(chatId, `${clientId}|${email}|have been banned:(|${permissions}`)
                        //window.open('/muted', '_blank');
                        open(location, '_self').close();
                        //nie wiem jak, ale to dziaÅ‚a:)
                    }else{
                        const id_mail_twit_perm = string.toString().split('|')
                        console.log(id_mail_twit_perm[3])
                        if(id_mail_twit_perm[3]!='MUTED'){
                            let chat = document.getElementById("chat")
                            let div = document.createElement("div");

                            let p_mail = document.createElement("span");
                            p_mail.innerText=`${id_mail_twit_perm[1]}`;

                            let popup = document.createElement("span");
                            if((permissions ==='ADMIN' || permissions === 'MODERATOR') && id_mail_twit_perm[3]==='BASIC'){
                                let form = document.createElement("form");
                                let button = document.createElement("button");
                                button.type='submit';
                                form.method='post';
                                //form.action=`/mute/${id_mail_twit_perm[0]}?chat=${chatId}`;
                                form.action=`/mute/${id_mail_twit_perm[0]}?chat=${chatId}`;
                                button.innerText='MUTE';
                                form.appendChild(button)
                                popup.appendChild(form)
                            }
                            let id = document.createElement("div")
                            id.innerText=id_mail_twit_perm[0];
                            popup.appendChild(id);
                            popup.classList.toggle('popuptext');
                            p_mail.classList.toggle('popup');
                            p_mail.onclick= ()=>{
                                let popups = [...document.getElementsByClassName('popuptext')];
                                let clickedOnClosedPopup = popup && !popup.classList.contains('show');
                                popups.forEach(p => p.classList.remove('show'));

                                if (clickedOnClosedPopup) popup.classList.toggle('show');  
                            }
                            p_mail.appendChild(popup)

                            let p_msg = document.createElement("span");
                            p_msg.innerText = `: ${id_mail_twit_perm[2]}`;
                            div.appendChild(p_mail)
                            div.appendChild(p_msg)

                            if(id_mail_twit_perm[2] != undefined){
                                chat.appendChild(div)
                            }
                        }
                    }
                }
            })
        });

        function sendTwit (twit) {
            console.log(twit)
            console.log(`${chatId}|${clientId}|${email}|${twit}|${permissions}`)
            console.log(permissions)
            if(permissions != "MUTED"){
                client.publish(chatId, `${clientId}|${email}|${twit}|${permissions}`)
            }else{
                let chat = document.getElementById("chat")
                let div = document.createElement("div");
                div.innerHTML="You are muted"
                chat.appendChild(div)
            }
        }

    </script>
</html>